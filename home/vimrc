" We live in modern times
set nocompatible

"================="
" Vim Plug Config "
"================="

" If vim-plug is not installed, install it.
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Enable plugins
call plug#begin('~/.vim/plugged')
Plug 'arcticicestudio/nord-vim'                     " best theme
Plug 'vim-airline/vim-airline'                      " style
Plug 'vim-airline/vim-airline-themes'               " style themes
Plug 'tpope/vim-fugitive'                           " git support
Plug 'airblade/vim-gitgutter'                       " git status by line
Plug 'vim-scripts/netrw.vim'                        " file tree
Plug 'Valloric/MatchTagAlways'                      " match the tags
Plug 'junegunn/vim-easy-align'                      " align comments
Plug 'ctrlpvim/ctrlp.vim'                           " file search
Plug 'vim-scripts/restore_view.vim'                 " preserve view after close
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' } " golang
Plug 'junegunn/goyo.vim', {'for': 'markdown'}       " zen mode
Plug 'godlygeek/tabular', {'for': 'markdown'}       " tabs for md
Plug 'plasticboy/vim-markdown', {'for': 'markdown'} " markdown
Plug 'reedes/vim-pencil', {'for': 'markdown'}       " markdown
call plug#end()

" Theme options
let g:airline_powerline_fonts = 1
let g:nord_italic_comments = 1

" Markdown options
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_frontmatter = 1

" Go Options
let g:go_fmt_command = "goimports"
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1

" Other options
let g:netrw_liststyle = 3
let g:netrw_banner = 0

" Color settings
colorscheme nord
if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

"===================="
" Some basic options "
"===================="

set backspace=indent,eol,start       " Make backspace sane
set cursorline                       " Highlight current line
set encoding=utf-8                   " Set default encoding to UTF-8
set hidden                           " Hides buffers instead of closing them
set scrolloff=5                      " Leaves room when scrolling up/down
set ttyfast lazyredraw               " Indicates a fast terminal connection
set directory=$HOME/.vimswap         " Directory for swap files
set undofile                         " Preserve undo history after closing file
set undodir=$HOME/.vim/undodir       " Where to save undo history
set clipboard=unnamed
set gdefault                         " Global default search
set history=1000                     " Command line history
set incsearch                        " Incrementally search buffer
set hlsearch                         " Highlight search results
set expandtab                        " Expand tabs to spaces
set tabstop=4                        " Number of spaces a tab counts for
set shiftwidth=2                     " Number of spaces for each step of autoindent
set softtabstop=2                    " Number of spaces a tab counts for when editing
set relativenumber number            " Line numbers, relative to current line
set showcmd                          " Show VIM commands on bottom of screen
set ignorecase smartcase             " Smart search matching
set splitbelow splitright            " Split down then right
set viewoptions=cursor,folds         " Save cursor position and folds
set wildmenu                         " Autocomplete command line
set wildmode=list:longest            " Order command options
set autoindent smartindent nocindent " Make indent work
set nowrap                           " Don't wrap lines, even on small screens

" Set language overrides
autocmd Filetype python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype go setlocal noexpandtab tabstop=4 shiftwidth=4 softtabstop=4

" Mouse support
set mouse=a
if &term =~ '^screen'
  set ttymouse=xterm2
endif

" Change cursor based on vim mode
let &t_SI = "\<Esc>[6 q"
let &t_SR = "\<Esc>[4 q"
let &t_EI = "\<Esc>[2 q"

" Pencil settings
augroup pencil
  autocmd!
  autocmd FileType markdown,mkd call pencil#init()
  autocmd FileType text         call pencil#init()
augroup END

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

