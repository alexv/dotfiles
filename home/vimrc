" We live in modern times
set nocompatible

"================="
" Vim Plug Config "
"================="

filetype off
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin('~/.vim/plugged')
Plug 'arcticicestudio/nord-vim'                     " best theme
Plug 'vim-airline/vim-airline'                      " style
Plug 'vim-airline/vim-airline-themes'               " style themes
Plug 'tpope/vim-fugitive'                           " git support
Plug 'airblade/vim-gitgutter'                       " git status by line
Plug 'vim-scripts/netrw.vim'                        " file tree
Plug 'Valloric/MatchTagAlways'                      " match the tags
Plug 'junegunn/vim-easy-align'                      " align comments
Plug 'ctrlpvim/ctrlp.vim'                           " file search
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' } " golang
Plug 'neoclide/coc.nvim', {'branch': 'release'}     " Intellisense for vim
Plug 'junegunn/goyo.vim', {'for': 'markdown'}       " zen mode
Plug 'godlygeek/tabular', {'for': 'markdown'}       " tabs for md
Plug 'plasticboy/vim-markdown', {'for': 'markdown'} " markdown
Plug 'reedes/vim-pencil', {'for': 'markdown'}       " markdown
call plug#end()

" Theme options
let g:airline_powerline_fonts = 1
let g:nord_italic_comments = 1

" Markdown options
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_frontmatter = 1

" Go Options
let g:go_fmt_command = "goimports"
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1

" Other options
let g:netrw_liststyle = 3
let g:netrw_banner = 0

" Color settings
colorscheme nord
if $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

"===================="
" Some basic options "
"===================="
set backspace=indent,eol,start  " Make backspace sane
set cursorline                  " Highlight current line
set encoding=utf-8              " Set default encoding to UTF-8
set hidden
set scrolloff=5
set ttyfast lazyredraw
set backup
set backupdir=$HOME/.vimbak
set directory=$HOME/.vimswap
set undofile
set undodir=$HOME/.vim/undodir
set clipboard=unnamed
set gdefault
set history=1000
set incsearch
set hlsearch
set expandtab
set tabstop=4
set shiftwidth=2
set softtabstop=2
set relativenumber number
set showcmd
set showmatch
set ignorecase smartcase
set splitbelow splitright
set viewoptions=cursor,folds
set wildmenu
set wildmode=list:longest
set autoindent smartindent nocindent
set nowrap

" Set language overrides
autocmd Filetype python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4
autocmd Filetype go setlocal noexpandtab tabstop=4 shiftwidth=4 softtabstop=4

" Mouse support
set mouse=a
if &term =~ '^screen'
  set ttymouse=xterm2
endif

" Change cursor based on vim mode
let &t_SI = "\<Esc>[6 q"
let &t_SR = "\<Esc>[4 q"
let &t_EI = "\<Esc>[2 q"

" Pencil settings
augroup pencil
  autocmd!
  autocmd FileType markdown,mkd call pencil#init()
  autocmd FileType text         call pencil#init()
augroup END

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" This goes last
filetype plugin indent on
